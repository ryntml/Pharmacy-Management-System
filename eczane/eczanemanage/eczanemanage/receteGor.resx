<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>